template header
numberOfDevices
previousRiskCategory
newRiskCategory
days

import java.util.List;
import java.util.UUID;
import java.lang.String;
import java.time.LocalDateTime;
import org.slf4j.Logger;
import com.example.siemcenter.common.models.Device;
import com.example.siemcenter.common.repositories.DeviceRepository;
import com.example.siemcenter.common.models.FactStatus;
import com.example.siemcenter.alarms.models.Alarm;
import com.example.siemcenter.alarms.repositories.AlarmRepository;
import com.example.siemcenter.logs.models.Log;
import com.example.siemcenter.util.DevicesForUser;
import com.example.siemcenter.logs.models.LogType;
import com.example.siemcenter.users.models.User;
import com.example.siemcenter.users.models.RiskCategory;
import com.example.siemcenter.users.repositories.UserRepository;

global Logger logger;
global DeviceRepository deviceRepository;
global AlarmRepository alarmRepository;
global UserRepository userRepository;
global DevicesForUser devicesForUser;


template "UserDevicesTemplate"
    rule "Categorize Users_@{row.rowNumber}"
    no-loop true
        when
            $log: Log(message.toLowerCase() contains "login"
                    || message.toLowerCase() contains "log in"
                    || message.toLowerCase() contains "log-in",
                    $currentUser: user
             )
            $user: User(this == $currentUser,
                        riskCategory == RiskCategory.@{previousRiskCategory}
            )
            eval(devicesForUser.getNumberOfDevicesForUser($currentUser.getUsername()) >= @{numberOfDevices})
            over window:time(@{days}d)
        then
            modify($user) {
                setRiskCategory(RiskCategory.@{newRiskCategory});
            }
            userRepository.save($user);
            logger.info("Custom rule fired! User " + $user.getUsername() " changed risk category from " + RiskCategory.@{previousRiskCategory} + " to " + RiskCategory.@{newRiskCategory});
    end
end template