dialect "mvel"

import java.util.List;
import java.time.LocalDateTime;
import org.slf4j.Logger;

import com.example.siemcenter.common.models.Device;
import com.example.siemcenter.common.repositories.DeviceRepository;
import com.example.siemcenter.common.models.FactStatus;
import com.example.siemcenter.alarms.models.Alarm;
import com.example.siemcenter.alarms.services.AlarmService;
import com.example.siemcenter.logs.models.Log;
import com.example.siemcenter.logs.models.LogType;
import com.example.siemcenter.users.models.User;
import com.example.siemcenter.users.models.RiskCategory;
import com.example.siemcenter.users.repositories.UserRepository;

global Logger logger;
global DeviceRepository deviceRepository;
global AlarmService alarmService;
global UserRepository userRepository;

rule "#15 Low risk category user is not associated with any alarm in past 90 days" salience 5
    when
        $user: User() from userRepository.findAllUsers();
        not(
            Alarm(relatedUsers contains $user )
            over window:time(90d)
        )
    then
       $user.setRiskCategory(RiskCategory.LOW);
       userRepository.save($user);
       logger.info("#15 User " + $user.getUsername() + " has gotten LOW risk category" );
end

rule "#16 Moderate risk category if user has triggered an antivirus alarm in past 6 months" salience 5
    when
        $user: User() from userRepository.findAllUsers();
        $alarm: Alarm(relatedUsers contains $user,
                message.toLowerCase() contains "antivirus"
                || message.toLowerCase() contains "threat detected"
        )
        over window:time(180d)
    then
       $user.setRiskCategory(RiskCategory.MODERATE);
       userRepository.save($user);
       logger.info("#16 User " + $user.getUsername() + " has gotten MODERATE risk category" );
end

rule "#17 Moderate risk category if 15 or more failed login attempts" salience 5
    when
        $user: User() from userRepository.findAllUsers()
        Number( intValue >= 15 ) from accumulate (
            $log: Log(message.toLowerCase() contains "login"
                      || message.toLowerCase() contains "log in"
                      || message.toLowerCase() contains "log-in",
                      user == $user,
                      logType == LogType.ERROR
                      || logType == LogType.WARNING
            )
            over window:time(90d), count($log)
        )
    then
       $user.setRiskCategory(RiskCategory.MODERATE);
       userRepository.save($user);
       logger.info("#17 User " + $user.getUsername() + " has gotten MODERATE risk category" );
end